# Job Board Scraper Configuration
# This example shows how to extract job listings with detailed information

name: "tech_jobs_scraper"
base_url: "https://example-jobs.com/search?q=software+engineer&location=remote"

# Conservative rate limiting for job boards
rate_limit: "5s"        # Many job boards have strict rate limits
timeout: "45s"          # Job boards can be slow
max_retries: 5          # Higher retries for important data

# Professional headers
headers:
  Accept: "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
  Accept-Language: "en-US,en;q=0.9"
  Accept-Encoding: "gzip, deflate, br"
  Referer: "https://www.google.com/"  # Some sites check referer

# Professional user agents
user_agents:
  - "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"
  - "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"

# Job listing extraction fields
fields:
  # Basic job information
  - name: "job_title"
    selector: ".job-title, h2.title, .position-title"
    type: "list"
    required: true
    transform:
      - type: "trim"
      - type: "normalize_spaces"

  - name: "company_name"
    selector: ".company-name, .employer, .company"
    type: "list"
    required: true
    transform:
      - type: "trim"

  - name: "job_url"
    selector: ".job-title a, .job-link, h2 a"
    type: "list"
    attribute: "href"
    required: true

  - name: "location"
    selector: ".location, .job-location, .where"
    type: "list"
    transform:
      - type: "trim"
      - type: "normalize_spaces"

  - name: "remote_type"
    selector: ".remote-type, .work-type"
    type: "list"
    transform:
      - type: "trim"
      - type: "lowercase"

  # Salary information
  - name: "salary_range"
    selector: ".salary, .compensation, .pay-range"
    type: "list"
    transform:
      - type: "trim"
      - type: "normalize_spaces"

  - name: "salary_min"
    selector: ".salary"
    type: "list"
    transform:
      - type: "regex"
        pattern: "\\$([0-9,]+)(?:\\s*-|\\s*to)"
        replacement: "$1"
      - type: "regex"
        pattern: ","
        replacement: ""
      - type: "parse_int"

  - name: "salary_max"
    selector: ".salary"
    type: "list"
    transform:
      - type: "regex"
        pattern: "(?:-|to)\\s*\\$([0-9,]+)"
        replacement: "$1"
      - type: "regex"
        pattern: ","
        replacement: ""
      - type: "parse_int"

  # Job details
  - name: "job_type"
    selector: ".job-type, .employment-type"
    type: "list"
    transform:
      - type: "trim"
      - type: "lowercase"

  - name: "experience_level"
    selector: ".experience-level, .seniority"
    type: "list"
    transform:
      - type: "trim"
      - type: "lowercase"

  - name: "posted_date"
    selector: ".posted-date, .date-posted, time"
    type: "list"
    attribute: "datetime"
    transform:
      - type: "trim"

  - name: "posted_relative"
    selector: ".posted-date, .date-posted"
    type: "list"
    transform:
      - type: "trim"
      - type: "normalize_spaces"

  # Job description and requirements
  - name: "description_summary"
    selector: ".job-summary, .description-preview"
    type: "list"
    transform:
      - type: "trim"
      - type: "normalize_spaces"

  - name: "key_skills"
    selector: ".skills .skill, .tag, .skill-tag"
    type: "list"
    transform:
      - type: "trim"
      - type: "lowercase"

  # Application information
  - name: "application_url"
    selector: ".apply-button, .apply-link"
    type: "list"
    attribute: "href"

  - name: "easy_apply"
    selector: ".easy-apply, .quick-apply"
    type: "list"
    transform:
      - type: "regex"
        pattern: ".*"
        replacement: "true"

  # Company information
  - name: "company_logo"
    selector: ".company-logo img, .employer-logo"
    type: "list"
    attribute: "src"

  - name: "company_size"
    selector: ".company-size, .employees"
    type: "list"
    transform:
      - type: "trim"

  - name: "industry"
    selector: ".industry, .company-industry"
    type: "list"
    transform:
      - type: "trim"
      - type: "lowercase"

  # Benefits and perks
  - name: "benefits"
    selector: ".benefits li, .perks li"
    type: "list"
    transform:
      - type: "trim"

# Pagination configuration for job listings
pagination:
  type: "url_pattern"
  url_pattern: "https://example-jobs.com/search?q=software+engineer&location=remote&page={page}"
  start_page: 1
  max_pages: 50  # Adjust based on expected results

# Alternative pagination using next button
# pagination:
#   type: "next_button"
#   selector: ".pagination .next:not(.disabled)"
#   max_pages: 50

# Output configuration
output:
  format: "csv"  # CSV is good for importing into spreadsheets
  file: "outputs/job-listings.csv"

# For detailed analysis, you might prefer JSON
# output:
#   format: "json"
#   file: "outputs/job-listings.json"
