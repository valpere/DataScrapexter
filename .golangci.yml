# .golangci.yml
# GolangCI-Lint configuration for DataScrapexter
# https://golangci-lint.run/usage/configuration/

# Options for analysis running
run:
  # Timeout for analysis
  timeout: 5m
  
  # Exit code when at least one issue was found
  issues-exit-code: 1
  
  # Include test files
  tests: true
  
  # Which dirs to skip
  skip-dirs:
    - vendor
    - third_party
    - testdata
    - examples
    - docs
    - scripts
  
  # Which files to skip
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"
    - "mock_.*\\.go$"
  
  # By default, list of stable checks is used
  modules-download-mode: readonly
  
  # Allow parallel running of linters
  allow-parallel-runners: true
  
  # Define Go version
  go: "1.24"

# Output configuration options
output:
  # Format of output
  format: colored-line-number
  
  # Print lines of code with issue
  print-issued-lines: true
  
  # Print linter name in the end of issue text
  print-linter-name: true
  
  # Make issues output unique by line
  uniq-by-line: true
  
  # Sort results by: filepath, line, column
  sort-results: true

# All available settings of specific linters
linters-settings:
  # Checks assignment alignment
  asasalint:
    exclude:
      - "^.*\\.(Test|Benchmark).*$"
    use-builtin-exclusions: true
    ignore-test: false

  # Cyclomatic complexity
  cyclop:
    max-complexity: 15
    package-average: 0.0
    skip-tests: false

  # Go linter
  dupl:
    threshold: 150

  # Check for two durations multiplied together
  durationcheck:
    # Optional list of arguments to check
    arguments:
      - time.Duration
      - time.Until
      - time.Since

  # Tool for code clone detection
  errcheck:
    check-type-assertions: true
    check-blank: true
    disable-default-exclusions: false

  # Checks error handling expressions
  errorlint:
    errorf: true
    errorf-multi: true
    asserts: true
    comparison: true

  # Checks for long functions
  funlen:
    lines: 100
    statements: 50
    ignore-comments: true

  # Controls golang import order
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/valpere/DataScrapexter)
    skip-generated: true
    custom-order: true

  # Cyclomatic complexity
  gocognit:
    min-complexity: 20

  # Checks whether const can be used
  goconst:
    min-len: 3
    min-occurrences: 3
    ignore-tests: false
    match-constant: true
    numbers: true
    min: 2
    max: 2

  # Check for common anti-patterns
  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
      - experimental
      - opinionated
    disabled-checks:
      - regexpMust
      - rangeValCopy
      - hugeParam
      - sloppyReassign
    settings:
      captLocal:
        paramsOnly: false
      elseif:
        skipBalanced: true
      forceTypeAssert:
        skipFile: true
      hugeParam:
        sizeThreshold: 512
      rangeExprCopy:
        sizeThreshold: 512
        skipTestFuncs: true
      rangeValCopy:
        sizeThreshold: 128
        skipTestFuncs: true
      ruleguard:
        rules: ''
      truncateCmp:
        skipArchDependent: true
      underef:
        skipRecvDeref: true
      unnamedResult:
        checkExported: true

  # Computes cyclomatic complexity
  gocyclo:
    min-complexity: 15

  # Checks Go code for unused constants, variables, functions and types
  godot:
    scope: declarations
    exclude: []
    capital: true
    period: true

  # Formatting rules
  gofmt:
    simplify: true
    rewrite-rules:
      - pattern: 'interface{}'
        replacement: 'any'
      - pattern: 'a[b:len(a)]'
        replacement: 'a[b:]'

  # Gofumpt checks
  gofumpt:
    lang-version: "1.24"
    extra-rules: true

  # Imports formatting
  goimports:
    local-prefixes: github.com/valpere/DataScrapexter

  # Linter for Go source code
  gomnd:
    checks:
      - argument
      - case
      - condition
      - operation
      - return
      - assign
    ignored-numbers:
      - '0'
      - '1'
      - '2'
      - '3'
      - '10'
      - '100'
      - '1000'
    ignored-files:
      - 'test_.*.go$'
    ignored-functions:
      - '^math\.'
      - '^http\.StatusCode'

  # Security oriented checks
  gosec:
    includes:
      - G101 # Look for hard coded credentials
      - G102 # Bind to all interfaces
      - G103 # Audit the use of unsafe block
      - G104 # Audit errors not checked
      - G106 # Audit the use of ssh.InsecureIgnoreHostKey
      - G107 # Url provided to HTTP request as taint input
      - G108 # Profiling endpoint automatically exposed on /debug/pprof
      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32
      - G110 # Potential DoS vulnerability via decompression bomb
      - G111 # Potential directory traversal
      - G112 # Potential slowloris attack
      - G113 # Usage of Rat.SetString in math/big with an overflow
      - G114 # Use of net/http serve function that has no support for setting timeouts
      - G201 # SQL query construction using format string
      - G202 # SQL query construction using string concatenation
      - G203 # Use of unescaped data in HTML templates
      - G204 # Audit use of command execution
      - G301 # Poor file permissions used when creating a directory
      - G302 # Poor file permissions used with chmod
      - G303 # Creating tempfile using a predictable path
      - G304 # File path provided as taint input
      - G305 # File traversal when extracting zip/tar archive
      - G306 # Poor file permissions used when writing to a new file
      - G307 # Poor file permissions used when creating a file with os.Create
      - G401 # Detect the usage of DES, RC4, MD5 or SHA1
      - G402 # Look for bad TLS connection settings
      - G403 # Ensure minimum RSA key length of 2048 bits
      - G404 # Insecure random number source (rand)
      - G501 # Import blocklist: crypto/md5
      - G502 # Import blocklist: crypto/des
      - G503 # Import blocklist: crypto/rc4
      - G504 # Import blocklist: net/http/cgi
      - G505 # Import blocklist: crypto/sha1
      - G601 # Implicit memory aliasing of items from a range statement
      - G602 # Slice access out of bounds
    confidence: medium
    severity: medium
    config:
      G301: "0750"
      G302: "0600"
      G306: "0600"

  # Copy of the golint
  govet:
    enable-all: true
    disable:
      - fieldalignment
      - shadow
    settings:
      printf:
        funcs:
          - (github.com/sirupsen/logrus.FieldLogger).Infof
          - (github.com/sirupsen/logrus.FieldLogger).Warnf
          - (github.com/sirupsen/logrus.FieldLogger).Errorf
          - (github.com/sirupsen/logrus.FieldLogger).Fatalf

  # Grouping of imports
  grouper:
    const: true
    var: true
    type: true
    import: true

  # Accept interfaces, return structs
  ireturn:
    allow:
      - anon
      - error
      - empty
      - stdlib
      - generic

  # Maximum line length
  lll:
    line-length: 120
    tab-width: 4

  # Reports wrong mirror patterns of bytes/strings usage
  misspell:
    locale: US
    ignore-words:
      - cancelled
      - cancelling

  # Finds naked returns
  nakedret:
    max-func-lines: 30

  # Finds slice declarations that could be pre-allocated
  prealloc:
    simple: true
    range-loops: true
    for-loops: true

  # Fast, configurable, extensible, flexible, and beautiful linter
  revive:
    ignore-generated-header: true
    severity: warning
    enable-all-rules: false
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: empty-block
      - name: error-naming
      - name: error-return
      - name: error-strings
      - name: errorf
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: indent-error-flow
      - name: range
      - name: receiver-naming
      - name: redefines-builtin-id
      - name: superfluous-else
      - name: time-naming
      - name: unexported-return
      - name: unreachable-code
      - name: unused-parameter
      - name: var-declaration
      - name: var-naming

  # Staticcheck
  staticcheck:
    checks: ["all"]

  # Stylecheck
  stylecheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    dot-import-whitelist:
      - fmt
    http-status-code-whitelist:
      - "200"
      - "400"
      - "404"
      - "500"

  # Checks function and package naming
  tagliatelle:
    case:
      use-field-name: true
      rules:
        json: snake
        yaml: camel
        xml: camel
        bson: camel

  # Remove unnecessary type conversions
  unconvert:
    fast-math: true
    safe: true

  # Reports unused function parameters
  unparam:
    check-exported: true

  # Variable alignment
  varnamelen:
    max-distance: 5
    min-name-length: 2
    check-receiver: true
    check-return: true
    check-type-param: true
    ignore-type-assert-ok: true
    ignore-map-index-ok: true
    ignore-chan-recv-ok: true
    ignore-names:
      - err
      - ok
      - id
      - vm
      - db
      - tx
      - i
      - j
      - k
      - v
      - t
      - tt
      - tc
      - ts
      - fs
      - ws
      - wg
      - rw
      - r
      - w
      - b

  # Whitespace detection
  whitespace:
    multi-if: true
    multi-func: true

# Linters configuration
linters:
  # Disable all linters
  disable-all: true
  # Enable specific linters
  enable:
    # Default linters
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - unused
    
    # Additional linters
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - copyloopvar
    - cyclop
    - decorder
    - dogsled
    - dupl
    - durationcheck
    - errchkjson
    - errorlint
    - exhaustive
    - exportloopref
    - forbidigo
    - funlen
    - gci
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - grouper
    - importas
    - inamedparam
    - interfacebloat
    - intrange
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - nosprintfhostport
    - paralleltest
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - stylecheck
    - tagalign
    - tagliatelle
    - tenv
    - testableexamples
    - testifylint
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    - varnamelen
    - wastedassign
    - whitespace
    - zerologlint

# Issues configuration
issues:
  # List of regexps of issue texts to exclude
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - dupl
        - errcheck
        - funlen
        - gocognit
        - goconst
        - gocyclo
        - gosec
        - lll
        - noctx
        - unparam
        - varnamelen
    
    # Exclude some linters from running on example files
    - path: examples/
      linters:
        - errcheck
        - gosec
        - noctx
    
    # Exclude some linters from cmd directory
    - path: cmd/
      linters:
        - gochecknoglobals
        - gochecknoinits
    
    # Exclude generated files
    - path: \.pb\.go$
      linters:
        - all
    
    # Exclude vendor
    - path: vendor/
      linters:
        - all
    
    # Exclude known issues
    - text: "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked"
      linters:
        - errcheck
    
    # Exclude long lines in comments
    - source: "^//( \\+build|go:)"
      linters:
        - lll
    
    # Exclude magic numbers in test files
    - path: _test\.go
      text: "Magic number"
      linters:
        - gomnd
    
    # Exclude some static errors
    - text: "SA1019: .*"
      linters:
        - staticcheck
  
  # Independently from option `exclude` we use default exclude patterns
  exclude-use-default: true
  
  # Maximum issues count per one linter
  max-issues-per-linter: 50
  
  # Maximum count of issues with the same text
  max-same-issues: 10
  
  # Show only new issues
  new: false
  
  # Fix found issues (if it's supported by the linter)
  fix: false

# Severity configuration
severity:
  # Default value is an empty string
  default-severity: warning
  
  # If set to true `severity-rules` regular expressions become case-sensitive
  case-sensitive: false
  
  # When a list of severity rules are provided, severity information will be added to lint issues
  rules:
    - linters:
        - dupl
      severity: info
    - linters:
        - gosec
      severity: error
